from splinter import Browser
from bs4 import BeautifulSoup as bs
import time
from webdriver_manager.chrome import ChromeDriverManager


def scrape_info():
    # Set up Splinter
    executable_path = {'executable_path': ChromeDriverManager().install()}
    browser = Browser('chrome', **executable_path, headless=False)
    url = "https://redplanetscience.com/"
    browser.visit(url)

    # Scrape page into Soup
    html = browser.html
    soup = bs(html, "html.parser")

    title = soup.find('div', class_ = 'content_title').text
    paragraph = soup.find('div', class_ = 'article_teaser_body').text
    url = "https://spaceimages-mars.com/"
    browser.visit(url)


    full_image_button = browser.find_link_by_partial_text("FULL IMAGE")

    html = browser.html
    soup = bs(html, "html.parser")

    full_image = soup.find('img', class_ = 'fancybox-image').get("src")

    featured_image_url=f'{url}{full_image}'

    url = "https://galaxyfacts-mars.com/"
    browser.visit(url)


    html = browser.html
    soup = bs(html, "html.parser")

    #trasnfr the table from web page
    import pandas as pd
    table1 = pd.read_html(url)[1]
    
    table1.columns = ["name", "measurements"]
    url = "https://marshemispheres.com"
    browser.visit(url)

    List_of_hemi = []
    for i in range(0,4):
        Hemisphere={}
        full_image_button = browser.find_link_by_partial_text("Hemisphere Enhanced")[i]
        full_image_button.click()    
        pic_link=browser.links.find_by_text('Sample')["href"]

        html = browser.html
        soup = bs(html, "html.parser")
        full_image = soup.find('h2', class_ = 'title').text
        print(full_image)
        print(pic_link)

        Hemisphere["title"]=full_image
        Hemisphere["image_url"]=pic_link
        List_of_hemi.append(Hemisphere)
        browser.back()
        
        List_of_hemi

    # Close the browser after scraping
    costa_data = {
            "news_title": title,
            "paragrapgh": min_temp,
            "full_image": max_temp
        }
    browser.quit()

    # Return results
    return costa_data

    